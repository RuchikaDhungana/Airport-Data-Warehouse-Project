--------------------------------------------------------------
-- Database creation Script

-- Auto-Generated by QSEE-SuperLite (c) 2001-2004 QSEE-Technologies Ltd.

-- Verbose generation: ON

-- note: spaces within table/column names have been replaced by underscores (_)

-- Target DB: SQL2

-- Entity Model :Entity Relationship Diagram

-- To drop the tables generated by this script run -
--   'C:\Users\ruchi\OneDrive\Desktop\Star_Schema_drop.sql'

--------------------------------------------------------------



--------------------------------------------------------------
-- Table Creation --
DROP TABLE DIM_TIME CASCADE CONSTRAINTS;
DROP TABLE DIM_COMPENSATION CASCADE CONSTRAINTS;
DROP TABLE DIM_COMPLAINTS CASCADE CONSTRAINTS;
DROP TABLE DIM_FLIGHTS CASCADE CONSTRAINTS;
DROP TABLE FACT_COMPLAINTS CASCADE CONSTRAINTS;

-- Each entity on the model is represented by a table that needs to be created within the Database.
-- Within SQL new tables are created using the CREATE TABLE command.
-- When a table is created its name and its attributes are defined.
-- The values of which are derived from those specified on the model.
-- Certain constraints are sometimes also specified, such as identification of primary keys.

-- Create a Database table to represent the "DIM_TIME" entity.
CREATE TABLE DIM_TIME(
	timeID	INTEGER NOT NULL,
	month	NUMBER,
	year	NUMBER,
	-- Specify the PRIMARY KEY constraint for table "DIM_TIME".
	-- This indicates which attribute(s) uniquely identify each row of data.
	CONSTRAINT	pk_DIM_TIME PRIMARY KEY (timeID)
);

-- Create a Database table to represent the "DIM_COMPENSATION" entity.
CREATE TABLE DIM_COMPENSATION(
	compensationKey	INTEGER NOT NULL,
	compensation_amnt	INTEGER,
	compensation_type	VARCHAR(8),
	dbSource	VARCHAR(17),
	-- Specify the PRIMARY KEY constraint for table "DIM_COMPENSATION".
	-- This indicates which attribute(s) uniquely identify each row of data.
	CONSTRAINT	pk_DIM_COMPENSATION PRIMARY KEY (compensationKey)
);

-- Create a Database table to represent the "DIM_COMPLAINTS" entity.
CREATE TABLE DIM_COMPLAINTS(
	complaintKey	INTEGER NOT NULL,
    complaintID	INTEGER,
	complaintType	VARCHAR(8),
	description	VARCHAR(15),
	complaintStatus	VARCHAR(8),
	dbSource	VARCHAR(17),
	-- Specify the PRIMARY KEY constraint for table "DIM_COMPLAINTS".
	-- This indicates which attribute(s) uniquely identify each row of data.
	CONSTRAINT	pk_DIM_COMPLAINTS PRIMARY KEY (complaintKey)
);

-- Create a Database table to represent the "DIM_FLIGHTS" entity.
CREATE TABLE DIM_FLIGHTS(
	flightKey	INTEGER NOT NULL,
	flightNo	INTEGER,
	tailNo	VARCHAR2(10),
	dbSource	VARCHAR(17),
	-- Specify the PRIMARY KEY constraint for table "DIM_FLIGHTS".
	-- This indicates which attribute(s) uniquely identify each row of data.
	CONSTRAINT	pk_DIM_FLIGHTS PRIMARY KEY (flightKey)
);
-- Create a Database table to represent the "FACT_COMPLAINTS" entity.
CREATE TABLE FACT_COMPLAINTS(
	factId	INTEGER NOT NULL,
	fk1_timeID	INTEGER NOT NULL,
	fk2_compensationKey	INTEGER NOT NULL,
	fk3_complaintKey	INTEGER NOT NULL,
	fk4_flightKey	INTEGER NOT NULL,
    noOfComplaints	INTEGER,
	totalCompensation	INTEGER,
	-- Specify the PRIMARY KEY constraint for table "FACT_COMPLAINTS".
	-- This indicates which attribute(s) uniquely identify each row of data.
	CONSTRAINT	pk_FACT_COMPLAINTS PRIMARY KEY (factId)
);


--------------------------------------------------------------
-- Alter Tables to add fk constraints --

-- Now all the tables have been created the ALTER TABLE command is used to define some additional
-- constraints.  These typically constrain values of foreign keys to be associated in some way
-- with the primary keys of related tables.  Foreign key constraints can actually be specified
-- when each table is created, but doing so can lead to dependency problems within the script
-- i.e. tables may be referenced before they have been created.  This method is therefore safer.

-- Alter table to add new constraints required to implement the "FACT_COMPLAINTS_DIM_TIME" relationship

-- This constraint ensures that the foreign key of table "FACT_COMPLAINTS"
-- correctly references the primary key of table "DIM_TIME"


ALTER TABLE FACT_COMPLAINTS ADD CONSTRAINT fk1_FACT_COMPLAINTS_to_DIM_TIME FOREIGN KEY(fk1_timeID) REFERENCES DIM_TIME(timeID) ;

-- Alter table to add new constraints required to implement the "FACT_COMPLAINTS_DIM_COMPENSATION" relationship

-- This constraint ensures that the foreign key of table "FACT_COMPLAINTS"
-- correctly references the primary key of table "DIM_COMPENSATION"

ALTER TABLE FACT_COMPLAINTS ADD CONSTRAINT fk2_FACT_COMPLAINTS_to_DIM_COMPENSATION FOREIGN KEY(fk2_compensationKey) REFERENCES DIM_COMPENSATION(compensationKey);

-- Alter table to add new constraints required to implement the "FACT_COMPLAINTS_DIM_COMPLAINTS" relationship

-- This constraint ensures that the foreign key of table "FACT_COMPLAINTS"
-- correctly references the primary key of table "DIM_COMPLAINTS"

ALTER TABLE FACT_COMPLAINTS ADD CONSTRAINT fk3_FACT_COMPLAINTS_to_DIM_COMPLAINTS FOREIGN KEY(fk3_complaintKey) REFERENCES DIM_COMPLAINTS(complaintKey);

-- Alter table to add new constraints required to implement the "FACT_COMPLAINTS_DIM_FLIGHTS" relationship

-- This constraint ensures that the foreign key of table "FACT_COMPLAINTS"
-- correctly references the primary key of table "DIM_FLIGHTS"

ALTER TABLE FACT_COMPLAINTS ADD CONSTRAINT fk4_FACT_COMPLAINTS_to_DIM_FLIGHTS FOREIGN KEY(fk4_flightKey) REFERENCES DIM_FLIGHTS(flightKey);


--------------------------------------------------------------
-- End of DDL file auto-generation
--------------------------------------------------------------
